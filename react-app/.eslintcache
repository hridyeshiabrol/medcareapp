[{"C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\AvailMedicine.jsx":"1","C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\NavbarRouter.jsx":"2","C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\index.js":"3","C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\UserProfileForm.jsx":"4","C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\MedicineFinder.jsx":"5","C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\MedicineManager.jsx":"6","C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\Dashboard.jsx":"7","C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\Homerouter.jsx":"8"},{"size":5400,"mtime":1609580882222,"results":"9","hashOfConfig":"10"},{"size":6046,"mtime":1609580572792,"results":"11","hashOfConfig":"10"},{"size":370,"mtime":1608795907041,"results":"12","hashOfConfig":"10"},{"size":4136,"mtime":1609580619119,"results":"13","hashOfConfig":"10"},{"size":5017,"mtime":1609580858070,"results":"14","hashOfConfig":"10"},{"size":3114,"mtime":1609580814778,"results":"15","hashOfConfig":"10"},{"size":7849,"mtime":1609581055789,"results":"16","hashOfConfig":"10"},{"size":999,"mtime":1608809143468,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"172t9c8",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\AvailMedicine.jsx",["37"],"C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\NavbarRouter.jsx",[],"C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\index.js",[],"C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\UserProfileForm.jsx",["38"],"C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\MedicineFinder.jsx",["39","40","41"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Modal, Button, Card, Col, Container } from \"react-bootstrap\";\r\n\r\nfunction MedicineFinder() {\r\n  //=---------------------All cities=----------------------\r\n  var [jsonAryCity, filljsonAryCity] = useState([\"city\"]);\r\n\r\n  var [mobile, setmobile] = useState(\"\");\r\n  \r\n\r\n  //=------------------Medicines according to city selected=-------\r\n  var [medicineObj, fillMedicine] = useState([]);\r\n  //-=====================-==--=Provider on basis of city and medicine selected\r\n  var [providerObj, fillProviderObj] = useState([]);\r\n\r\n  var [finder, fetchfinder] = useState({\r\n    cityy: \"\",\r\n    medicine: \"\",\r\n  });\r\n  //=--------------------ONCHANGE-=======================\r\n  var doUpdate = (event) => {\r\n    var { name, value } = event.target;\r\n    fetchfinder({\r\n      ...finder,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  //=-------------------=-------USE EFFECT -FETCH ALL DISTINCT CITIES=-------------\r\n  useEffect(async () => {\r\n    var url = \"http://localhost:3003/med/fetch-all\";\r\n    var response = await axios.post(url);\r\n    filljsonAryCity(response.data);\r\n  }, []);\r\n\r\n  //=------------------------=--=FETCH ALL MEDICINES ONBASIS OF CITY SELECTED=------------=-=-\r\n  async function doFill(e) {\r\n    doUpdate(e);\r\n    var url = \"http://localhost:3003/med/fetch-medicine/\" + e.target.value;\r\n    var response = await axios.post(url);\r\n    fillMedicine(response.data);\r\n    var { mobile } = response.data[0];\r\n    // alert(mobile);\r\n    setmobile(mobile);\r\n  }\r\n\r\n  //=----------------------------FETCH ALL DETAILS AND SHOW IN CARD-==========================\r\n  async function showCard(finder) {\r\n    var url =\r\n      \"http://localhost:3003/med/fetch-provider/\" +\r\n      finder.cityy +\r\n      \"/\" +\r\n      finder.medicine;\r\n    var response = await axios.post(url);\r\n    fillProviderObj(response.data);\r\n    alert(JSON.stringify(response.data));\r\n  }\r\n\r\n  //=-------------------------------=-=-=-TO FETCH MOBILE NUMBER=------------------------\r\n  async function doFetchProviderDetails(obj,mobile) {\r\n    var url = \"http://localhost:3003/profile/fetch-profile\";\r\n    var response = await axios.post(url, obj);\r\n    alert(JSON.stringify(response.data));\r\n    setmobile(response.data[0]);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <center>\r\n        {/* =--------------============---------CITY=--------=-------------------------- */}\r\n        City:{\" \"}\r\n        <select\r\n          id=\"template-select\"\r\n          value={finder.cityy}\r\n          name=\"cityy\"\r\n          onChange={doFill}\r\n        >\r\n          <option>Select City</option>\r\n          {jsonAryCity.map((obj) => {\r\n            return <option value={obj}>{obj}</option>;\r\n          })}\r\n        </select>\r\n        &nbsp;&nbsp;\r\n        {/* =--------------============---------MEDICINE=--------=-------------------------- */}\r\n        Medicine:\r\n        <select\r\n          id=\"template-select\"\r\n          value={finder.medicine}\r\n          name=\"medicine\"\r\n          onChange={doUpdate}\r\n        >\r\n          <option>Select Medicine</option>\r\n          {medicineObj.map((obj) => {\r\n            return <option value={obj}>{obj}</option>;\r\n          })}\r\n        </select>\r\n        <br></br>\r\n        {/* =--------------============---------FIND MEDICINE PROVIDERS=--------=-------------------------- */}\r\n        <br></br>\r\n        <Button variant=\"info\" onClick={() => showCard(finder)}>\r\n          Find Medicine Providers\r\n        </Button>\r\n      </center>\r\n\r\n      {/* =--------------============---------SHOW IN CARDS=--------=-------------------------- */}\r\n\r\n      {providerObj.map((obj) => {\r\n        return (\r\n          <Container>\r\n            <Col md={4}>\r\n              <Card>\r\n                <Card.Body\r\n                  style={{\r\n                    backgroundColor: \"darkgray\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <center>\r\n                    {\" \"}\r\n                    <Card.Title>\r\n                      User Name:-{obj.uid} <br />{\" \"}\r\n                    </Card.Title>{\" \"}\r\n                  </center>\r\n                  <Card.Text>\r\n                    <h6>Medicine's Name:{obj.medname}</h6>\r\n                    <p>Quantity:{obj.qty}</p>\r\n                    <p>Expiry Date:{obj.expy}</p>\r\n                    <p>Units:{obj.unitss}</p>\r\n                  </Card.Text>\r\n                  <center>\r\n                    {\" \"}\r\n                    <Button\r\n                      variant=\"info\"\r\n                      onClick={() => {\r\n                        doFetchProviderDetails(obj)\r\n                      }}\r\n                    >\r\n                      Details\r\n                    </Button>\r\n                  </center>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Container>\r\n        );\r\n      })}\r\n      <Container>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MedicineFinder;\r\n","C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\MedicineManager.jsx",[],"C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\Dashboard.jsx",[],["42","43"],"C:\\xampp\\htdocs\\react\\medcare\\react-app\\src\\Homerouter.jsx",[],["44","45"],{"ruleId":"46","severity":1,"message":"47","line":28,"column":30,"nodeType":"48","messageId":"49","endLine":28,"endColumn":61,"fix":"50"},{"ruleId":"46","severity":1,"message":"47","line":27,"column":30,"nodeType":"48","messageId":"49","endLine":27,"endColumn":61,"fix":"51"},{"ruleId":"52","severity":1,"message":"53","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":15},{"ruleId":"52","severity":1,"message":"56","line":10,"column":8,"nodeType":"54","messageId":"55","endLine":10,"endColumn":14},{"ruleId":"57","severity":1,"message":"58","line":32,"column":13,"nodeType":"59","endLine":36,"endColumn":4},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"60","replacedBy":"64"},{"ruleId":"62","replacedBy":"65"},"no-useless-computed-key","Unnecessarily computed property [\"ppic\"] found.","Property","unnecessarilyComputedProperty",{"range":"66","text":"67"},{"range":"68","text":"67"},"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'mobile' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-native-reassign",["69"],"no-negated-in-lhs",["70"],["69"],["70"],[660,668],"\"ppic\"",[637,645],"no-global-assign","no-unsafe-negation"]