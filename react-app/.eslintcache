[{"D:\\Hridyeshi\\medcareapp\\react-app\\src\\NavbarRouter.jsx":"1","D:\\Hridyeshi\\medcareapp\\react-app\\src\\Dashboard.jsx":"2","D:\\Hridyeshi\\medcareapp\\react-app\\src\\Homerouter.jsx":"3","D:\\Hridyeshi\\medcareapp\\react-app\\src\\MedicineManager.jsx":"4","D:\\Hridyeshi\\medcareapp\\react-app\\src\\MedicineFinder.jsx":"5"},{"size":5818,"mtime":1612162903797,"results":"6","hashOfConfig":"7"},{"size":7593,"mtime":1612162903794,"results":"8","hashOfConfig":"7"},{"size":955,"mtime":1612164141674,"results":"9","hashOfConfig":"7"},{"size":2974,"mtime":1612162903796,"results":"10","hashOfConfig":"7"},{"size":4790,"mtime":1612162903795,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1owwa2s",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Hridyeshi\\medcareapp\\react-app\\src\\NavbarRouter.jsx",[],"D:\\Hridyeshi\\medcareapp\\react-app\\src\\Dashboard.jsx",[],"D:\\Hridyeshi\\medcareapp\\react-app\\src\\Homerouter.jsx",[],"D:\\Hridyeshi\\medcareapp\\react-app\\src\\MedicineManager.jsx",[],"D:\\Hridyeshi\\medcareapp\\react-app\\src\\MedicineFinder.jsx",["22","23","24"],{"ruleId":"25","severity":1,"message":"26","line":4,"column":10,"nodeType":"27","messageId":"28","endLine":4,"endColumn":15},{"ruleId":"25","severity":1,"message":"29","line":10,"column":8,"nodeType":"27","messageId":"28","endLine":10,"endColumn":14},{"ruleId":"30","severity":1,"message":"31","line":32,"column":13,"nodeType":"32","endLine":36,"endColumn":4},"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'mobile' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]